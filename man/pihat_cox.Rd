% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/pihat_cox.R
\name{pihat_cox}
\alias{pihat_cox}
\title{Cross-fit a Cox model to estimate the generalized propensity score for staggered treatments}
\usage{
pihat_cox(
  tr,
  X_tv = NULL,
  X_ti = NULL,
  tvc = NULL,
  tic = NULL,
  cf = TRUE,
  nfolds = 10,
  foldid = NULL
)
}
\arguments{
\item{tr}{an nxT binary matrix for the treatment variable (which must be staggered)}

\item{X_tv}{a length-T list of nxp matrices where p is the number of time-varying variables. The t-th element is the matrix \eqn{(X_{itj})_{i\in [n], j\in [p]}}}

\item{X_ti}{an nxq matrix where q is the number of time-invariant variables}

\item{tvc}{a vector of variable names for (both time-varying and time-invariant) variables with time-varying coefficients. Leave it as default if no time-varying coefficient is used.}

\item{tic}{a vector of variable names for (both time-varying and time-invariant) variables with time-invariant coefficients. Leave it as default if no time-invariant coefficient is used.}

\item{cf}{TRUE iff cross-fitting is used}

\item{nfolds}{number of folds (K in Algorithm 1)}

\item{foldid}{NULL if fold indices are generated randomly or a list of length K with the k-th element a vector of indices in fold k}
}
\value{
a length-n vector of generalized propensity score estimates
}
\description{
\code{pihat_cox} fits a Cox model with time-varying/invariant variables and time-varying/invariant coefficients.
To formally write down the model, we define the following quantities
\itemize{
\item{\eqn{X_{itj}}}{ j-th time-varying covariate \eqn{(j=1,\ldots,p)} for unit i at time t \eqn{(j=p+1,\ldots, p+q)}}
\item{\eqn{X_{ik}}}{ j-th time-invariant covariate for unit i \eqn{(j=p+1,\ldots, p+q)}}
\item{\eqn{S_{tvc}\subset \{1, \ldots, p+q\}}}{ the subset of variables with time-varying coefficients}
\item{\eqn{S_{tic}\subset \{1, \ldots, p+q\}}}{ the subset of variables with time-invariant coefficients}
}
Then the Cox model we fit is
\deqn{\lambda(t\mid X_i) = \lambda_0(t)\exp\Bigg\{\sum_{j\in S_{tvc}, j\le p}X_{itj}\beta_{jt} + \sum_{j\in S_{tvc}, j > p}X_{ij}\beta_{jt}
+ \sum_{j\in S_{tic}, j\le p}X_{itj}\beta_{j} + \sum_{j\in S_{tic}, j > p}X_{ij}\beta_{j}\Bigg\}.}
}
\examples{
\donttest{
# Load opentable data
data(opentable)
library("tidyverse")

# Generate the treatment assignments
tr <- opentable \%>\% select(state, time, treat) \%>\%
 spread(time, treat) \%>\%
 select(-state) \%>\%
 as.matrix
T <- ncol(tr)

## Construct covariate matrices
# vote, beds, and region are time-invariant covariates
X_vote <- opentable$vote \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1]
X_beds <- opentable$beds \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1]
X_region <- opentable$region \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1] \%>\%
  data.frame(region = .) \%>\%
  model.matrix(~0+region, data = .) \%>\%
  .[, -1] \%>\% as.matrix
X_ti <- cbind(vote = X_vote, beds = X_beds, X_region)

# confirmed is a time-varying covariate
X_confirmed <- opentable$confirmed \%>\%
  matrix(nrow = T) \%>\% t
X_tv <- lapply(1:T, function(t){
  tmp <- as.matrix(X_confirmed[, t])
  colnames(tmp) <- "confirmed"
  tmp
})

# Using cross-fitting and randomly generated folds
set.seed(2023)
nfolds <- 10
tic <- c("confirmed", colnames(X_ti))
gps <- pihat_cox(tr, X_tv, X_ti, tic = tic, cf = TRUE, nfolds = nfolds)

# Using cross-fitting and randomly generated folds
set.seed(2023)
foldid <- ripw:::gen_cf_inds(nrow(tr), nfolds)
gps2 <- pihat_cox(tr, X_tv, X_ti, tic = tic, foldid = foldid)
identical(gps, gps2)

# Not using cross-fitting
gps3 <- pihat_cox(tr, X_tv, X_ti, tic = tic, cf = FALSE)
}

}
