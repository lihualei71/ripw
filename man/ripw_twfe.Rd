% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ripw_twfe.R
\name{ripw_twfe}
\alias{ripw_twfe}
\title{RIPW-TWFE estimator and inference with derandomized cross-fitting}
\usage{
ripw_twfe(
  Y,
  tr,
  xi = rep(1/ncol(Y), ncol(Y)),
  Pi_fun = NULL,
  pihat_fun = NULL,
  muhat_fun = NULL,
  pihat_params = list(),
  muhat_params = list(),
  cf = TRUE,
  nfolds = 10,
  foldid = NULL,
  nreps = 1,
  Theta_bound = Inf,
  show_progress_bar = ifelse(nreps == 1, FALSE, TRUE)
)
}
\arguments{
\item{Y}{an nxT matrix for the outcome variable}

\item{tr}{an nxT binary matrix for the treatment variable}

\item{xi}{DATE weights; a T-dim vector of nonnegative numbers that sum up to 1}

\item{Pi_fun}{a function to generate the reshaped distribution; see Details}

\item{pihat_fun}{a function to estimate generalized propensity scores; see Details}

\item{muhat_fun}{a function to estimate regression adjustments; see Details}

\item{pihat_params}{a list of extra parameters for pihat_fun}

\item{muhat_params}{a list of extra parameters for muhat_fun}

\item{cf}{TRUE iff cross-fitting is used}

\item{nfolds}{number of folds (K in Algorithm 1)}

\item{foldid}{NULL if fold indices are generated randomly or a list of length K with the k-th element a vector of indices in fold k}

\item{nreps}{number of data splits (B in Algorithm 1)}

\item{Theta_bound}{a truncation bound for \eqn{\Theta_i \triangleq \Pi(w) / \hat{\pi}_i(w)}; \code{Inf} by default}

\item{show_progress_bar}{TRUE if progress bar is shown. FALSE by default if \code{nreps=1}.}
}
\value{
\item{tauhat}{point estimate}
\item{se}{standard error}
\item{tstat}{t statistic}
\item{pval}{p-value for the two-sided test of zero effect}
}
\description{
\code{ripw_twfe} fits the two-way-fixed-effects regression with modified outcomes weighted by the ratio
between the reshaped distribution and the generalized propensity score. It allows for user-defined estimators of
treatment model (i.e., \eqn{\hat{\pi}_i}) and outcome model (i.e., \eqn{\hat{\mu}_{it}(1)} and \eqn{\hat{\mu}_{it}(0)})
}
\details{
\code{Pi_fun} is a function that maps a treatment path to its density under the reshaped distribution. \code{Pi_fun}
should take a single input as a binary vector that gives the treatment path and return a non-negative scalar that gives
the density. The default value of \code{Pi_fun} is NULL, in which case the internal function \code{default_Pi_fun} will
be used. \code{default_Pi_fun} first checks if the treatment is staggered, transient (one-off), or other. For staggered
treatment, if \code{xi = rep(1/T, T)}, it uses the solution (C.5) in the paper, i.e., the never-treated and
always-treated get (T+1)/4T and other assignments get 1/2T. For transient treatment, if \code{xi = rep(1/T, T)}, it uses
the uniform distribution over the never-treated and all ever-treated assignments. In all other cases, it calls
\code{\link{solve_date_maxmin}} and wraps the output into a function.

\code{pihat_fun} is a function that generates the estimates of generalized propensity scores. It must output a nx1 vector
of generalized propensity scores for all units. The inputs must include \code{cf} and \code{foldid} (see
\code{\link{pihat_cox}} for details) and can include other arguments passed through \code{pihat_params}.

\code{muhat_fun} is a function that generates the estimates of\eqn{\hat{\mu}_{it}(1)} and \eqn{\hat{\mu}_{it}(0)}. It must
output a \code{list(muhat1 = , muhat0 = )} where each element is a nxT matrix. The inputs must include \code{cf}
and \code{foldid} (see \code{\link{muhat_twfe}} for details) and can include other arguments passed through \code{muhat_params}.
}
\examples{
\donttest{
# Load opentable data
data(opentable)
library("tidyverse")

# Generate the outcomes and treatment assignments
Y <- opentable \%>\% select(state, time, reserv.diff) \%>\%
 spread(time, reserv.diff) \%>\%
 select(-state) \%>\%
 as.matrix
tr <- opentable \%>\% select(state, time, treat) \%>\%
 spread(time, treat) \%>\%
 select(-state) \%>\%
 as.matrix
T <- ncol(Y)

## Construct covariate matrices
# vote, beds, and region are time-invariant covariates
X_vote <- opentable$vote \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1]
X_beds <- opentable$beds \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1]
X_region <- opentable$region \%>\%
  matrix(nrow = T) \%>\% t \%>\% .[, 1] \%>\%
  data.frame(region = .) \%>\%
  model.matrix(~0+region, data = .) \%>\%
  .[, -1] \%>\% as.matrix
X_ti <- cbind(vote = X_vote, beds = X_beds, X_region)

# confirmed is a time-varying covariate
X_confirmed <- opentable$confirmed \%>\%
  matrix(nrow = T) \%>\% t
X_tv <- lapply(1:T, function(t){
  tmp <- as.matrix(X_confirmed[, t])
  colnames(tmp) <- "confirmed"
  tmp
})

# Derandomized cross-fitting
set.seed(2023)
nfolds <- 10
nreps <- 10

## We will fit a Cox model for generalized propensity scores and a TWFE regression with interactions
## for the regression adjustment.
# X_tv is for time-varying covariates, X_ti is for time-invariant covariates
# tic is the list of variables with time-invariant coefficients; see pihat_cox for details
pihat_params <- list(X_tv = X_tv,
                     X_ti = X_ti,
                     tic = c("confirmed", colnames(X_ti)))
# main_tic is the list of variables with time-invariant coefficients in the main regression,
# int_tic is the list of variables with stime-invariant coefficients in the interaction terms;
# see muhat_twfe for details
muhat_params <- list(X_tv = X_tv,
                     X_ti = X_ti,
                     main_tic = "confirmed",
                     int_tic = c("confirmed", colnames(X_ti)),
                     joint = TRUE)

# Compute the derandomized cross-fitted RIPW-TWFE estimator with K=10 and B=10
res <- ripw_twfe(Y, tr,
                 pihat_fun = pihat_cox,
                 muhat_fun = muhat_twfe,
                 pihat_params = pihat_params,
                 muhat_params = muhat_params,
                 nreps = nreps,
                 nfolds = nfolds)
print(res)
}

}
